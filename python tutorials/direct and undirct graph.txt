class AdjMatrix:
    def __init__(self, size):
        self.arr = []
        for i in range(size):
            self.arr.append([0 for i in range(size)])
        self.size = size

    def addEdge(self, src, dest):
        self.arr[src][dest] = 1


    def  printAdjMatrix(self):

        for row in self.arr:
            for val in row:
                print(val, end="") 
            print()

    def hasEdge(self, src, dest):

        if self.arr[src][dest] == 1:
            return 1
        return 0

    def removeEdge(self, src, dest):

        self.arr[src][dest] = 0


if __name__ == '__main__':

    g = AdjMatrix(5)

    print("Adding Edge From 0 to 1")
    g.addEdge(0,1)
    print("Adding Edge From 0 to 2")
    g.addEdge(0,2)
    print("Adding Edge From 0 to 3")
    g.addEdge(0,3)
    print("Adding Edge From 1 to 3")
    g.addEdge(1,3)
    print("Adding Edge From 1 to 4")
    g.addEdge(1,4)
    print("Adding Edge From 2 to 3")
    g.addEdge(2,3)
    print("Adding Edge From 3 to 4")
    g.addEdge(3,4)

    print("Adjacency Matrix Representation of the Graph")
    g.printAdjMatrix()


