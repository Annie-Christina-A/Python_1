class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class CircularLinkedList:
    def __init__(self):
        self.head = None
    
    def addLast(self, val):
        newNode = Node(val)

        if self.head == None:
            newNode.next = newNode
            self.head = newNode;
        else:
            last = self.head;

            while last.next != self.head:
                last = last.next;
            
            last.next = newNode;
            newNode.next = self.head

    def search(self, key):

        if self.head == None:
            return False

        temp = self.head;

        while temp != None:
            if temp.data == key:
                return True
            temp = temp.next
            if temp == self.head:
                break

        return False
            
    def printList(self):
        temp = self.head
        
        while True:
            print(temp.data)
            temp = temp.next
            if temp == self.head:
                break


if __name__ == "__main__":

    llist = CircularLinkedList()

    llist.addLast(10)
    llist.addLast(20)
    llist.addLast(30)

    print("Circular Linked List: 10->20->30->10")

    print("Searching Element: ",20)
    if llist.search(20):
        print("Search Found")
    else:
        print("Search Not Found")

    print("Searching Element: ",100)
    if llist.search(100):
        print("Search Found")
    else:
        print("Search Not Found")